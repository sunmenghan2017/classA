{"version":3,"sources":["Todolist/Todoinput.js","Todolist/Todoing.js","Todolist/Todolist.js","index.js"],"names":["Todoinput","handleChange","e","setState","target","name","parseInt","value","handleChanged","handleInput","keyCode","props","add","state","inputValue","bind","a","b","c","console","log","this","className","htmlFor","id","onChange","onKeyDown","type","style","float","placeholder","Component","Todoing","todo","list","length","map","item","idx","key","checked","addo","onClick","delete","overdo","del","defaultProps","Todolist","addItem","data","localStorage","setItem","JSON","stringify","delItem","filter","index","addOver","push","delteItem","clear","overDoing","todolist","parse","getItem","overlist","addnum","changeNum","check","checkboxCheck","checkboxChecked","ReactDOM","render","document","getElementById"],"mappings":"qQAIqBA,G,iBACjB,aAAe,IAAD,8BACV,+CASJC,aAAa,SAACC,GACV,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAMC,SAA0B,KAAjBJ,EAAEE,OAAOG,MAAW,EAAEL,EAAEE,OAAOG,UAZlD,EAedC,cAAc,SAACN,GACX,EAAKC,SAAL,eACKD,EAAEE,OAAOC,KAAMH,EAAEE,OAAOG,SAjBnB,EAoBdE,YAAc,SAACP,GAEI,KAAZA,EAAEQ,UAED,EAAKC,MAAMC,IAAIV,EAAEE,OAAOG,OACxB,EAAKM,MAAMC,WAAW,KAvB1B,EAAKL,YAAc,EAAKA,YAAYM,KAAjB,gBACnB,EAAKF,MAAM,CACPG,EAAE,GACFC,EAAE,GACFC,EAAE,GACFJ,WAAW,IAPL,E,iFA6BVK,QAAQC,IAAIC,Q,+BAIZ,OACI,6BAEI,yBAAKC,UAAWD,KAAKR,MAAMG,EAAEK,KAAKR,MAAMI,EAAEI,KAAKR,MAAMK,EAAE,GAAG,MAAM,QAC5D,2BAAOK,QAAQ,OAAf,oDACA,2BAAOC,GAAG,MAAMnB,KAAK,IAAIoB,SAAUJ,KAAKpB,aAAcM,MAAOc,KAAKR,MAAMG,EAAGU,UAAWL,KAAKZ,YAAakB,KAAK,SAFjH,IAII,2BAAOtB,KAAK,IAAIoB,SAAUJ,KAAKpB,aAAcM,MAAOc,KAAKR,MAAMI,EAAGS,UAAWL,KAAKZ,YAAakB,KAAK,SAJxG,IAMI,2BAAOtB,KAAK,IAAIoB,SAAUJ,KAAKpB,aAAcM,MAAOc,KAAKR,MAAMK,EAAGQ,UAAWL,KAAKZ,YAAakB,KAAK,SANxG,IAQI,2BAAIN,KAAKR,MAAMG,EAAEK,KAAKR,MAAMI,EAAEI,KAAKR,MAAMK,IAa7C,yBAAKI,UAAU,WACX,yBAAKA,UAAU,WACX,2BAAOC,QAAQ,WAAWK,MAAO,CAACC,MAAM,SAAS,yCACjD,2BAAQP,UAAU,WAAWjB,KAAK,aAAayB,YAAa,uBAAcL,SAAUJ,KAAKb,cAAeD,MAAOc,KAAKR,MAAMC,WAAYY,UAAWL,KAAKZ,YAAakB,KAAK,gB,GA7DzJI,cCFlBC,E,iLAOP,IAAD,OACAC,EAAMZ,KAAKV,MAAXsB,KACAC,EAAMb,KAAKV,MAAXuB,KACL,OACI,yBAAKZ,UAAU,YACX,yBAAKA,UAAU,QACX,uDAAS,0BAAME,GAAG,aAAcS,EAAKE,SACrC,4BAEQF,EAAKG,KAAI,SAACC,EAAKC,GAAN,OACL,wBAAIC,IAAKD,EAAKhB,UAAU,aACpB,2BAAOA,UAAU,SAASK,KAAK,WAAWa,SAAS,EAAQjC,MAAO8B,EAAMZ,SAAU,kBAAI,EAAKd,MAAM8B,KAAKH,MAAQD,EAC9G,4BAAQf,UAAU,SAASoB,QAAS,kBAAI,EAAK/B,MAAMgC,OAAOL,KAA1D,qBAKhB,uDAAQ,0BAAMd,GAAG,aAAaU,EAAKC,SACnC,wBAAIb,UAAU,QAENY,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACT,wBAAIC,IAAKD,EAAKhB,UAAU,YACpB,2BAAOA,UAAU,WAAWK,KAAK,WAAWa,SAAS,EAAMjC,MAAO8B,EAAMZ,SAAU,kBAAI,EAAKd,MAAMiC,OAAON,MAASD,EACjH,4BAAQf,UAAU,SAASoB,QAAS,kBAAI,EAAK/B,MAAMkC,IAAIP,KAAvD,qBAKZ,yBAAKhB,UAAU,QACX,uBAAGA,UAAU,UAAb,gCAAmD,0BAAMA,UAAU,aAAhB,iB,GApCtCS,aAgDrCC,EAAQc,aAAa,CACjBb,KAAK,CAAC,EAAE,EAAE,I,IC9COc,E,YACjB,aAAc,IAAD,8BACT,+CAuBJC,QAAU,SAACC,GAEP,EAAK9C,SAAS,CACV8B,KAAK,GAAD,mBAAM,EAAKpB,MAAMoB,MAAjB,CAAsBgB,MAE5B,WACEC,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKxC,MAAMoB,WA9BjD,EAkCbqB,QAAU,SAAChB,GAIP,EAAKnC,UAAS,SAACU,EAAMF,GAIjB,OADAQ,QAAQC,IAAIP,EAAMoB,MACX,CACHA,KAAMpB,EAAMoB,KAAKsB,QAAO,SAAClB,EAAKmB,GAAN,OAAclB,IAAMkB,SAElD,WACEN,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKxC,MAAMoB,WA9CjD,EAyDbwB,QAAQ,SAACnB,GACL,EAAKnC,UAAS,WACV,EAAKU,MAAMqB,KAAKwB,KAAK,EAAK7C,MAAMoB,KAAKK,IACrC,EAAKgB,QAAQhB,MACf,WACEY,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKxC,MAAMoB,OACtDiB,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKxC,MAAMqB,WA/DjD,EAoEbyB,UAAY,SAACrB,GACT,EAAKnC,UAAS,SAACU,EAAMF,GAEjB,OADAQ,QAAQC,IAAIP,EAAMqB,MACX,CACHA,KAAMrB,EAAMqB,KAAKqB,QAAO,SAAClB,EAAKmB,GAAN,OAAclB,IAAMkB,SAElD,WACEN,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKxC,MAAMqB,WA3EjD,EA8Eb0B,MAAM,WACFV,aAAaU,SA/EJ,EAkFbC,UAAU,SAACvB,GACP,EAAKnC,UAAS,WACV,EAAKU,MAAMoB,KAAKyB,KAAK,EAAK7C,MAAMqB,KAAKI,IACrC,EAAKqB,UAAUrB,MACjB,WACEY,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKxC,MAAMqB,OACtDgB,aAAaC,QAAQ,OAAOC,KAAKC,UAAU,EAAKxC,MAAMoB,WAtF1D,EAAKpB,MAAQ,CACToB,KAAK,GACLC,KAAK,GACLlB,EAAE,IACFC,EAAE,KANG,E,iFA+FT,IAAI6C,EAAWV,KAAKW,MAAMb,aAAac,QAAQ,SAC3CC,EAAWb,KAAKW,MAAMb,aAAac,QAAQ,SAC5CF,GAAUG,GACT5C,KAAKlB,UAAS,SAACU,EAAMF,GACjB,MAAM,CACFsB,KAAK6B,EACL5B,KAAK+B,Q,+BAOjB,OACI,yBAAK3C,UAAU,WACX,kBAAC,EAAD,CAAWV,IAAKS,KAAK2B,UACrB,kBAAC,EAAD,CAASP,KAAMpB,KAAKoC,QAASb,OAAQvB,KAAKwC,UAAWK,OAAQ7C,KAAK8C,UAAWlC,KAAMZ,KAAKR,MAAMoB,KAAMC,KAAMb,KAAKR,MAAMqB,KAAMW,IAAKxB,KAAKsC,UAAWhB,OAAQtB,KAAKiC,QAASM,MAAOvC,KAAKR,MAAMoB,KAAK2B,MAAOQ,MAAO/C,KAAKgD,cAAe7B,QAASnB,KAAKiD,uB,GAhHvNvC,aCCtCwC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9eea84b7.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './todo.css'\r\n//受控组件，value值被react控制的表单元素\r\n//可以实时获取表单元素的值（表单验证）/写法相对麻烦\r\nexport default class Todoinput extends Component {\r\n    constructor( ){ \r\n        super(); \r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.state={\r\n            a:'',\r\n            b:'',\r\n            c:'',\r\n            inputValue:''\r\n        }\r\n    }//箭头函数不需bind\r\n    handleChange=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:parseInt(e.target.value===''?0:e.target.value)\r\n        })\r\n    }\r\n    handleChanged=(e)=>{\r\n        this.setState({\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    handleInput = (e)=>{\r\n        //绑定this，事件处理函数写成箭头函数，或bind\r\n        if(e.keyCode===13){\r\n            // console.log(e.target.value);\r\n            this.props.add(e.target.value);\r\n            this.state.inputValue='';\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        console.log(this);\r\n        //this.a.focus();//页面加载后第一个input获得焦点\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* 数值计算 */}\r\n                <div className={this.state.a+this.state.b+this.state.c>10?'box':'box1'}>\r\n                    <label htmlFor=\"inp\">请输入第一个数：</label>\r\n        {/* 受控组件 */}<input id=\"inp\" name=\"a\" onChange={this.handleChange} value={this.state.a} onKeyDown={this.handleInput} type=\"text\" /> \r\n                    +\r\n                    <input name=\"b\" onChange={this.handleChange} value={this.state.b} onKeyDown={this.handleInput} type=\"text\" />\r\n                    +\r\n                    <input name=\"c\" onChange={this.handleChange} value={this.state.c} onKeyDown={this.handleInput} type=\"text\" />\r\n                    =\r\n                    <p>{this.state.a+this.state.b+this.state.c}</p>\r\n                    {/* <input ref={(inp)=>{this.a=inp}} onChange={this.handleChange} value={this.state.a} onKeyDown={this.handleInput} type=\"text\" />\r\n                    +\r\n                    <input name=\"b\" onChange={this.handleChange} value={this.state.b} onKeyDown={this.handleInput} type=\"text\" />\r\n                    +\r\n                    <input name=\"c\" onChange={this.handleChange} value={this.state.c} onKeyDown={this.handleInput} type=\"text\" />\r\n                    =\r\n                    <p>{this.state.b+this.state.c}</p> */}\r\n                    {/* 非受控组件:一次性获取或处理表单元素的值 */}\r\n                    {/* <input ref={(inp)=>{this.inp=inp}} type=\"text\" />\r\n                    <button style={{backgroundColor:'#c4b1a3',color:'red',fontSize:'20px',borderRadius:'5px'}} className=\"btn\" onClick={()=>{console.log(this.inp.value)}}>提交</button>   */}\r\n                </div>\r\n                {/* Todolist的添加TODO： */}\r\n                <div className=\"addHead\">\r\n                    <div className=\"addList\">\r\n                        <label htmlFor=\"todolist\" style={{float:'left'}}><h2>ToDoList</h2></label>\r\n                        <input  className=\"todolist\" name=\"inputValue\" placeholder={'添加ToDoList'} onChange={this.handleChanged} value={this.state.inputValue} onKeyDown={this.handleInput} type=\"text\" /> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//受控组件：\r\n//1.给input标签添加value属性，赋值为state的值\r\n//2.绑定onChange事件，在事件处理函数中setState\r\n//3.一个事件处理函数控制多个表单时，给input添加name属性，事件处理函数重谢：setState({[e.target.name]:e.target.value})\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport default class Todoing extends Component {\r\n    // delItem(idx,e){\r\n    //     this.props.del(idx);//则button 内可写成onClick={this.props.del.bind(idx,e)}\r\n    //     console.log(e);\r\n        \r\n    // }\r\n    \r\n    render() {\r\n        var {todo}=this.props;\r\n        var {list}=this.props;\r\n        return (\r\n            <div className=\"addDoing\">\r\n                <div className=\"list\">\r\n                    <h2 >正在进行<span id=\"todocount\" >{todo.length}</span></h2>\r\n                    <ul>\r\n                        {\r\n                            todo.map((item,idx)=>\r\n                                <li key={idx} className=\"doingList\">\r\n                                    <input className='icheck' type='checkbox' checked={false}  value={item} onChange={()=>this.props.addo(idx)}/>{item}\r\n                                    <button className=\"delbtn\" onClick={()=>this.props.delete(idx)}>删除</button>\r\n                                </li>\r\n                            )\r\n                        }\r\n                    </ul>\r\n                    <h2>已经完成<span id=\"donecount\">{list.length}</span></h2>\r\n                    <ul className=\"over\">\r\n                        {\r\n                            list.map((item,idx)=>\r\n                            <li key={idx} className=\"overList\">\r\n                                <input className='ichecked' type='checkbox' checked={true} value={item} onChange={()=>this.props.overdo(idx)} />{item}\r\n                                <button className=\"delbtn\" onClick={()=>this.props.del(idx)}>删除</button>\r\n                            </li>\r\n                        )   \r\n                        }\r\n                    </ul>\r\n                    <div className='foot'>\r\n                        <p className='footer'>Copyright ? 2014 todolist.cn <span className=\"clear-btn\">clear</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n//类型检查\r\nTodoing.propTypes={\r\n    todo:PropTypes.array,\r\n    delte:PropTypes.func\r\n}\r\nTodoing.defaultProps={\r\n    todo:[1,2,3]\r\n}\r\n\r\n","\r\nimport React, { Component } from 'react'\r\nimport Todoinput from './Todoinput'\r\nimport Todoing from './Todoing'\r\nimport './todo.css'\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            todo:[],\r\n            list:[],\r\n            a:100,\r\n            b:200\r\n        }\r\n        // 深拷贝\\浅拷贝\r\n        // var obj = {a:100,b:[1,2,3]};\r\n        // var obj1 = {c:300};\r\n        // var o = {...obj};\r\n        // var o = Object.assign({},obj,obj1);\r\n        // 深拷贝\r\n        // var o = JSON.parse(JSON.stringify(obj));\r\n        // o.b[0] = 200;\r\n        // console.log(o===obj);\r\n        // 遍历对象\r\n        // Object.keys(obj).forEach((item)=>{\r\n        //     console.log(item)\r\n        //     console.log(obj[item])\r\n        // })\r\n\r\n    }\r\n    addItem = (data)=>{\r\n        // this.state.todo.push(data);\r\n        this.setState({\r\n            todo: [...this.state.todo,data]\r\n            \r\n        },()=>{\r\n            localStorage.setItem('todo',JSON.stringify(this.state.todo))\r\n        })\r\n    }\r\n    \r\n    delItem = (idx)=>{\r\n        // 1、不能直接改变或处理state，通过setState改变\r\n        \r\n        // 2、setState是异步执行\r\n        this.setState((state,props)=>{\r\n            // let todo = [...state.todo];\r\n            // todo.splice(idx,1);\r\n            console.log(state.todo);\r\n            return {\r\n                todo: state.todo.filter((item,index)=>idx!==index)\r\n            }\r\n        },()=>{\r\n            localStorage.setItem('todo',JSON.stringify(this.state.todo))\r\n        })\r\n\r\n        // 在setState里获取state可能会出错，不是你想要的值\r\n        // 可以像上面那样，把第一个参数写成函数，解决该问题\r\n        // this.setState({\r\n        //     todo: this.state.num + 100\r\n        // },()=>{\r\n        //     console.log(this.state.todo)\r\n        // })\r\n    }\r\n    addOver=(idx)=>{\r\n        this.setState(()=>{\r\n            this.state.list.push(this.state.todo[idx]);\r\n            this.delItem(idx);   \r\n        },()=>{\r\n            localStorage.setItem('todo',JSON.stringify(this.state.todo))\r\n            localStorage.setItem('list',JSON.stringify(this.state.list))\r\n        })\r\n\r\n    }\r\n\r\n    delteItem = (idx)=>{\r\n        this.setState((state,props)=>{\r\n            console.log(state.list);\r\n            return {\r\n                list: state.list.filter((item,index)=>idx!==index)\r\n            }\r\n        },()=>{\r\n            localStorage.setItem('list',JSON.stringify(this.state.list))\r\n        })\r\n    }\r\n    clear=()=>{\r\n        localStorage.clear();\r\n        //load();\r\n    }\r\n    overDoing=(idx)=>{\r\n        this.setState(()=>{\r\n            this.state.todo.push(this.state.list[idx]);\r\n            this.delteItem(idx);    \r\n        },()=>{\r\n            localStorage.setItem('list',JSON.stringify(this.state.list))\r\n            localStorage.setItem('todo',JSON.stringify(this.state.todo))\r\n        })\r\n\r\n    }\r\n    \r\n\r\n    componentDidMount() {\r\n        let todolist = JSON.parse(localStorage.getItem('todo'));\r\n        let overlist = JSON.parse(localStorage.getItem('list'));\r\n        if(todolist&&overlist){\r\n            this.setState((state,props)=>{\r\n                return{\r\n                    todo:todolist,\r\n                    list:overlist\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n\trender() {\r\n        return (\r\n            <div className='boxList'>\r\n                <Todoinput add={this.addItem} />\r\n                <Todoing addo={this.addOver} overdo={this.overDoing} addnum={this.changeNum} todo={this.state.todo} list={this.state.list} del={this.delteItem} delete={this.delItem} clear={this.state.todo.clear} check={this.checkboxCheck} checked={this.checkboxChecked}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React,{Fragment,Component}from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Todolist from './Todolist/Todolist'\n// import App from './App';\n\nReactDOM.render(\n    <Todolist/>,\n    document.getElementById('root')\n)\n\n\n\n\n\n\n"],"sourceRoot":""}